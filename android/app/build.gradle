// android/app/build.gradle (module:app)

// ----------------------------------------------------------------------------------------------------------
// 1. plugins
// ----------------------------------------------------------------------------------------------------------
plugins {
	id("com.android.application")
	id("org.jetbrains.kotlin.android")
	id("com.facebook.react")
}

def _newArchEnabled = (findProperty("newArchEnabled") ?: "false").toBoolean()
def _hermesEnabled  = (findProperty("hermesEnabled")  ?: "true").toBoolean()

react {
	hermesEnabled = _hermesEnabled
	autolinkLibrariesWithApp()
}

// ----------------------------------------------------------------------------------------------------------
// 3. android
// ----------------------------------------------------------------------------------------------------------
android {

	// 기본 설정 1
	namespace "com.LIFECHANGE"
	ndkVersion rootProject.ext.ndkVersion
	buildToolsVersion rootProject.ext.buildToolsVersion
	compileSdk rootProject.ext.compileSdkVersion

	// 기본 설정 2
	defaultConfig {
		applicationId "com.LIFECHANGE"
		minSdkVersion rootProject.ext.minSdkVersion
		targetSdkVersion rootProject.ext.targetSdkVersion
		versionCode rootProject.ext.versionCode
		versionName rootProject.ext.versionName
		buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", _newArchEnabled ? "true" : "false"
		buildConfigField "boolean", "IS_HERMES_ENABLED", _hermesEnabled ? "true" : "false"

		// x86_64 에뮬 포함 보장
		ndk {
			abiFilters "arm64-v8a", "x86_64"
		}
		externalNativeBuild {
			cmake {
				abiFilters "arm64-v8a", "x86_64"
			}
		}
	}

	// 컴파일 옵션
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_17
		targetCompatibility JavaVersion.VERSION_17
	}

	// 서명 설정
	signingConfigs {
		debug {
			storeFile file('debug.keystore')
			storePassword 'android'
			keyAlias 'androiddebugkey'
			keyPassword 'android'
		}
		release {
			if (project.hasProperty('RN_WIDGET_STORE_FILE')) {
				storeFile file(RN_WIDGET_STORE_FILE)
				storePassword RN_WIDGET_STORE_PASSWORD
				keyAlias RN_WIDGET_KEY_ALIAS
				keyPassword RN_WIDGET_KEY_PASSWORD
			}
			else if (project.hasProperty('APP_RELEASE_STORE_FILE')) {
				storeFile file(APP_RELEASE_STORE_FILE)
				storePassword APP_RELEASE_STORE_PASSWORD
				keyAlias APP_RELEASE_KEY_ALIAS
				keyPassword APP_RELEASE_KEY_PASSWORD
			}
		}
	}

	// 빌드 타입
	buildTypes {
		debug {
			signingConfig signingConfigs.debug
		}
		release {
			signingConfig signingConfigs.release
			minifyEnabled false
			shrinkResources false
			proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
		}
	}

	// BuildConfig 생성
	buildFeatures {
		buildConfig = true
	}

	// 네이티브 라이브러리 패키징 확인
	packaging {
		jniLibs {
			useLegacyPackaging = false
		}
	}

	// apk 이름 변경
	applicationVariants.all { variant ->
		variant.outputs.all { output ->
			def newApkName = "LIFECHANGE_${variant.versionName}.apk"
			output.outputFileName = newApkName
		}
	}
}

// ----------------------------------------------------------------------------------------------------------
// 4. dependencies
// ----------------------------------------------------------------------------------------------------------
dependencies {
	// Hermes 강제 포함(에뮬 x86_64용 .so 보장)
	if (_hermesEnabled) {
		debugImplementation("com.facebook.react:hermes-android:${rootProject.ext.reactNativeVersion}")
		releaseImplementation("com.facebook.react:hermes-android:${rootProject.ext.reactNativeVersion}")
	}
	else {
		implementation("org.webkit:android-jsc:+")
	}
}
